// Generated by CoffeeScript 1.6.2
/*
  Backbone.Widget
  https://github.com/meleyal/backbone.widget

  Copyright (c) 2013 William Meleyal
  MIT License
*/


(function() {
  var _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Backbone.Widget = (function(_super) {
    __extends(Widget, _super);

    function Widget() {
      this.remove = __bind(this.remove, this);      _ref = Widget.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Widget.exportWidget = function(namespace) {
      var klass;

      klass = this;
      return $.fn[namespace] = function(options) {
        if (options == null) {
          options = {};
        }
        return this.each(function(idx, el) {
          return klass.install(el, options, namespace);
        });
      };
    };

    Widget.install = function(el, options, namespace) {
      var instance, klass;

      klass = this;
      if (instance = $(el).data(namespace)) {
        if (options && typeof options === 'string') {
          return instance[options].call(klass);
        } else {
          return instance;
        }
      } else {
        options = _.extend(options, {
          el: el,
          namespace: namespace
        });
        instance = new klass(options);
        $(el).data(namespace, instance);
        this.removeEvent = Backbone.Widget.removeEvent;
        if (this.removeEvent) {
          return $(document).on(this.removeEvent, instance.remove);
        }
      }
    };

    Widget.prototype.remove = function() {
      $(document).off(this.removeEvent, this.remove);
      return Widget.__super__.remove.apply(this, arguments);
    };

    return Widget;

  })(Backbone.View);

}).call(this);
